/* -*-Mode: c++;-*-
   Copyright (c) 2004-2008 John Plevyak, All Rights Reserved
*/
// module
S(in_module)
S(use_module)
S(import)
S(export)
S(as)
S(extern)
S(extern_include)
// identifier
S(const)
S(qualified_ident)
S(global)
S(scope)
S(ident)
S(var)
S(def_ident)
S(declare_ident)
// function
S(def_fun)
S(pattern)
S(pattern_type)
S(init)
S(intent)
S(arg)
S(rest)
// constructor
S(new)
S(object)
S(list)
S(vector)
// type
S(def_type)
S(where)
S(type)
S(def_type_param)
S(type_param)
S(inherits)
S(must_implement)
S(must_specialize)
S(implements)
S(specializes)
S(includes)
S(vector_type)
S(index)
S(sum_type)
S(record_type)
S(fun_type)
S(ref_type)
S(tagged_type)
S(type_application)
// expression
S(op)
S(ifexpr)
S(block)
S(conc)
S(seq)
S(with)
S(with_scope)
// flow control
S(label)
S(break)
S(continue)
S(goto)
S(return)
S(if)
S(loop)
S(loop_cond)
